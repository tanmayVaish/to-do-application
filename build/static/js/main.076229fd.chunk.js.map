{"version":3,"sources":["components/Card.js","components/Column.js","App.js","index.js"],"names":["Card","props","useState","edit","setEdit","todo","title","setTitle","description","setDescription","due","setDue","start","setStart","id","className","placeholder","value","onChange","e","target","onClick","todoList","map","card","updateTodoList","toggleOpen","deleteCard","Column","open","addCard","time","Date","now","App","filter","trash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.076229fd.chunk.js","sourcesContent":["import './styles/Card.scss';\nimport {useState} from \"react\";\n\nconst Card = (props) => {\n\n  const [edit, setEdit] = useState(true);\n  const [title, setTitle] = useState(props.todo.title);\n  const [description, setDescription] = useState(props.todo.description);\n  const [due, setDue] = useState(props.todo.due);\n  const [start, setStart] = useState(props.todo.start);\n\n  const saveEditing = () => {\n    if (title === \"\" || description === \"\" || start === \"\" || due === \"\") {\n      return\n    }\n    setEdit(!edit);\n    props.todoList.map(card => {\n      if (card === props.todo) {\n        card.title = title\n        card.description = description\n        card.start = start\n        card.due = due\n      }\n    })\n    props.updateTodoList(props.todoList);\n    props.toggleOpen(false);\n  }\n\n  const deleteEditing = () => {\n    props.todoList.map(card => {\n      if (card === props.todo) {\n        props.deleteCard(card);\n      }\n    })\n    props.toggleOpen(false);\n  }\n\n  return (\n    <div id={'card'}>\n      {\n        edit ? (\n          <div className={'frontCard'}>\n            <div className={'fieldsCard'}>\n              <div className={'inputFieldCard'}>\n                <input\n                  className={'inputCardTitle'}\n                  placeholder={'Title'}\n                  value={title}\n                  onChange={(e) => {\n                    setTitle(e.target.value);\n                  }}\n                />\n                <textarea\n                  className={'inputCardInput'}\n                  value={description}\n                  onChange={(e) => {\n                    setDescription(e.target.value)\n                  }}\n                  placeholder={'Whatcha doing??'}/>\n\n              </div>\n              <div className={'dateFieldCard'}>\n                <input value={start} className={'dateFieldInput'}\n                       placeholder={'Start Time'}\n                       onChange={(e) => {\n                         setStart(e.target.value)\n                       }}\n                />\n                <input value={due} className={'dateFieldInput'}\n                       placeholder={'End Time'}\n                       onChange={(e) => {\n                         setDue(e.target.value)\n                       }}\n                />\n              </div>\n            </div>\n            <div className={'buttonCards'}>\n              <div className={'buttonCardStyle'} onClick={() => {\n                saveEditing();\n              }}>Add\n              </div>\n              <div className={'buttonCardStyle'} onClick={() => {\n                deleteEditing();\n              }}>Delete\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={'backCard'}>\n            <div className={'contentCard'}>\n              <div className={'contentCardTitle'}>{props.todo.title}</div>\n              <pre className={'contentCardDescription'}>{props.todo.description}</pre>\n              <div><span className={'contentCardStart'}>Start :</span> {props.todo.start}</div>\n              <div><span className={'contentCardDue'}>End :</span> {props.todo.due}</div>\n            </div>\n            <div className={'buttonCard'}>\n              <div className={'buttonCardStyle'} onClick={() => setEdit(!edit)}>Edit</div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nexport default Card;","import './styles/Column.scss'\nimport Card from \"./Card\";\nimport {useState} from \"react\";\n\nconst Column = (props) => {\n\n  const [open, toggleOpen] = useState(false);\n\n  return (\n    <div id={'columns'}>\n      <div className={'column'}>\n        <div className={'upperPartColumn'}>\n          <span className={\"titleColumn\"}>To-Doü§î</span>\n          <div className={'buttonColumn'}\n               onClick={() => {\n                 if (!open) {\n                   props.addCard({\n                     time: Date.now(),\n                     title: \"\",\n                     description: \"\",\n                     start:\"\",\n                     due: \"\"\n                   })\n                   toggleOpen(true);\n                 }\n               }}\n          >Add\n          </div>\n        </div>\n        <div className={'lowerPartColumn'}>\n          <div className={'cardColumn'}>\n            {\n              props.todoList.map(todo => (\n                <Card\n                  key={todo.time}\n                  todo={todo}\n                  todoList={props.todoList}\n                  deleteCard={props.deleteCard}\n                  updateTodoList={props.updateTodoList}\n                  toggleOpen={toggleOpen}\n                />\n              ))\n            }\n          </div>\n        </div>\n      </div>\n      <div className={'column'}>\n        <div className={'upperPartColumn'}>\n          <span className={\"titleColumn\"}>In-Progress‚è≥</span>\n        </div>\n        <div className={'lowerPartColumn'}>\n          <div className={'cardColumn'}>\n          </div>\n        </div>\n      </div>\n      <div className={'column'}>\n        <div className={'upperPartColumn'}>\n          <span className={\"titleColumn\"}>Doneüòå</span>\n          <div className={'buttonColumn'}>Flush</div>\n        </div>\n        <div className={'lowerPartColumn'}>\n          <div className={'cardColumn'}>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Column;","import './App.scss';\nimport Column from \"./components/Column\";\nimport {useState} from \"react\";\n\nfunction App() {\n\n  const [todoList, updateTodoList] = useState([]);\n\n  const addCard = (card) => {\n    updateTodoList([card, ...todoList]);\n  }\n\n  const deleteCard = (card) => {\n    updateTodoList(todoList.filter(trash => trash !== card));\n  }\n\n  return (\n      <div id={'app'}>\n        <div className={'head'}>\n          <div className={'title'}>TO-DO LIST üìã</div>\n        </div>\n        <div className={'columnContainer'}>\n          <Column\n            todoList={todoList}\n            addCard={addCard}\n            deleteCard={deleteCard}\n            updateTodoList={updateTodoList}\n          />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}